version: 0.2

# TODO: Currently running as root, if we change to non-root then change this
# run-as: Linux-user-name

env:
  shell: bash
  # TODO: Consider setting up the data directory with environment variables
  # variables:
  #   key: "value"
  #   key: "value"
        
phases:
  install:
    commands:
      # Install mountpoint
      - wget https://s3.amazonaws.com/mountpoint-s3-release/latest/x86_64/mount-s3.rpm
      - sudo yum -y install ./mount-s3.rpm
      # DEBUG
      - echo ${CONFIG_FILEPATH}
      - ls ${CONFIG_FILEPATH}
  pre_build:
    commands:
      # Pull the image from the registry. This is faster than building from
      # scratch, especially when cached
      - echo 'Pulling the Docker image...'
      - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/i2m6n0b5
      - docker pull public.ecr.aws/i2m6n0b5/nitelite-pipeline:latest
      # Mount the S3 buckets
      - mkdir /data; mkdir /data/input; mkdir /data/output
      - mkdir /data/input/referenced_images; mount-s3 nitelite.referenced-images /data/input/referenced_images
      - mkdir /data/input/metadata; mount-s3 nitelite.metadata /data/input/metadata
      - mkdir /data/input/images; mount-s3 nitelite.images /data/input/images
      # DEBUG
      # Run the test suite. test.sh: environment setup, pytest.sh: python tests
      # - echo Running the test suite...
      # - mkdir /data/test_data; mkdir /data/test_data/input; mkdir /data/test_data/output
      # - mount-s3 nitelite.test-data /data/test_data/input --allow-overwrite --allow-delete
      # - ./test/test.sh -c ./night-horizons-mapmaker/configs/metadata.yml -d /data/test_data -f ./aws/docker-compose.yaml
      # - ./test/pytest.sh -c ./night-horizons-mapmaker/configs/metadata.yml -d /data/test_data -f ./aws/docker-compose.yaml
  build:
    commands:
      # Run the pipeline
      - ./bin/pipeline.sh -c ${CONFIG_FILEPATH} -d /data  -f ./aws/docker-compose.yaml
  post_build:
    commands:
      # Display output
      - echo 'Output:'
      - ls -R /data/output

artifacts:
  files:
    - '/data/output/metadata/*'
  name:
    - run-$(date +%Y-%m-%d)'