Resources:
  NLPipelineCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: nitelite-pipeline
      Artifacts: 
        Location: !Ref OutputBucket
        Type: S3
      Environment: 
        Type: LINUX_CONTAINER
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        ComputeType: BUILD_GENERAL1_LARGE
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: FLIGHT_ID
            Value: 220513-FH135
          - Name: CONFIG_FILEPATH
            Value: ./configs/metadata.yml
          - Name: LOGGING_LEVEL
            Value: WARNING
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Location: https://github.com/AdlerFarHorizons/NITELite-pipeline.git
        BuildSpec: aws/buildspec.yml
        Type: GITHUB
        GitSubmodulesConfig:
          FetchSubmodules: true
      Cache:
        Type: LOCAL
        Modes:
          - LOCAL_DOCKER_LAYER_CACHE
  # We need to build the image on linux to use it on linux,
  # so we use aws to build the image.
  # We make a separate project for building the image, because it's faster
  # to pull the image from amazon ecr than to build it from scratch.
  # Also, docker hub rate limits anonymous users, so building occasionally
  # fails because we can't pull the base image, continuumio/miniconda3
  # If access to the base image continues to be a problem we should
  # just mirror it on ECS.
  NLPipelineImageCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: nitelite-pipeline-image
      Artifacts: 
        Location: !Ref OutputBucket
        Type: S3
      Environment: 
        Type: LINUX_CONTAINER
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        ComputeType: BUILD_GENERAL1_MEDIUM
        PrivilegedMode: true
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source: 
        Location: https://github.com/AdlerFarHorizons/NITELite-pipeline.git
        BuildSpec: aws/image-buildspec.yml
        Type: GITHUB
        GitSubmodulesConfig:
          FetchSubmodules: true
      Cache:
        Type: LOCAL
        Modes:
          - LOCAL_DOCKER_LAYER_CACHE
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: NITELitePipelineServiceRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: CodeBuildRolePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: ParameterStorePolicy
                Effect: Allow
                Action:
                  - ssm:GetParameters
                  - ssm:GetParameter
                  - ssm:GetParametersByPath
                Resource: "*"
              - Sid: CloudWatchLogsPolicy
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Sid: CodeCommitPolicy
                Effect: Allow
                Action:
                  - codecommit:GitPull
                Resource: "*"
              - Sid: S3GetObjectPolicy
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource: "*"
              - Sid: S3PutObjectPolicy
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:AbortMultipartUpload
                  - s3:DeleteObject
                Resource: "*"
              - Sid: S3BucketIdentity
                Effect: Allow
                Action:
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                  - s3:ListBucket
                Resource: "*"
              - Sid: CodeBuildDockerPolicy
                Effect: Allow
                Action:
                  - sts:GetServiceBearerToken
                  - ecr-public:GetAuthorizationToken
                  - ecr-public:BatchCheckLayerAvailability
                  - ecr-public:GetDownloadUrlForLayer
                  - ecr-public:GetRepositoryPolicy
                  - ecr-public:DescribeRepositories
                  - ecr-public:ListImages
                  - ecr-public:DescribeImages
                  - ecr-public:BatchGetImage
                  - ecr-public:ListTagsForResource
                  - ecr-public:DescribeImageScanFindings
                  - ecr-public:InitiateLayerUpload
                  - ecr-public:UploadLayerPart
                  - ecr-public:CompleteLayerUpload
                  - ecr-public:PutImage
                Resource: "*"
  OutputBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: RetainExceptOnCreate
    Properties:
      BucketName: nitelite.pipeline-output